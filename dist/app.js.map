{"version":3,"sources":["webpack://vuexl/webpack/universalModuleDefinition","webpack://vuexl/webpack/bootstrap","webpack://vuexl/external \"lodash\"","webpack://vuexl/external \"vue-class-component\"","webpack://vuexl/./src/symbols.ts","webpack://vuexl/./src/util.ts","webpack://vuexl/./src/module.ts","webpack://vuexl/./src/decorators.ts","webpack://vuexl/./src/register.ts","webpack://vuexl/./src/map-helper.ts","webpack://vuexl/./src/index.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","require","sLocalStoreChannelName","Symbol","sLocalStoreStatus","sLocalStoreCounter","getChannelName","vm","getLocalStoreName","localStoreStatus","connectedLocalStoreName","localConnectedName","localStatus","currentVm","_a","localName","$parent","getModuleByNameSpace","store","namespace","separator","myNameSpace","external_lodash_","_modulesNamespaceMap","Error","getNameSpace","localStoreName","localStoreChannelName","getLocalStateGetter","$store","$isServer","_b","context","state","getters","getLocalMutationGetter","args","_i","arguments","length","commit","apply","concat","getLocalGetterGetter","getLocalActionGetter","dispatch","LocalStore","_store","options","target","key","localStore","decoratorFactory","runner","option","_key","myOptions","setDecorator","LocalState","LocalMutation","LocalAction","LocalGetter","getNameNumber","amount","localStoreCounter","registerLocal","localChannelName","$options","_c","isUsingName","_d","isUsingSameStore","_e","numberingSeparator","myLocalStoreName","getName","registerModule","namespaced","confirmChannel","channelName","Boolean","isLocalStore","__assign","unregisterLocal","getLocalStoreState","count","unregisterModule","mapFactory","maps","result","map","mapLocalActions","mapLocalGetters","mapLocalMutations","mapLocalState","setLocalStore","targetVue","extends","beforeCreate","install","vue","mixin","created","$localStore","myLocalStore","data","beforeDestroy","Component","external_vue_class_component_default"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vuexl\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vuexl\"] = factory();\n\telse\n\t\troot[\"vuexl\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"lodash\");","module.exports = require(\"vue-class-component\");","export const sLocalStoreChannelName = Symbol('localStoreChannel')\nexport const sLocalStoreStatus = Symbol('localStoreStatus')\nexport const sLocalStoreCounter = Symbol('localStoreCounter')\n","import {sLocalStoreChannelName, sLocalStoreStatus} from './symbols'\nimport {IStoreVue} from './type'\nexport const getChannelName = (vm: IStoreVue<any>): string | undefined => {\n  return vm[sLocalStoreChannelName]\n}\n\nexport const getLocalStoreState = (vm: IStoreVue<any>) => {\n  return vm[sLocalStoreStatus] || {}\n}\n\nexport const getLocalStoreName = (vm: IStoreVue<any>): string | undefined => {\n  if(!vm){return}\n  // if already it has connected LocalName\n  let localStoreStatus = vm[sLocalStoreStatus]\n  if(!localStoreStatus){\n    localStoreStatus = {}\n    vm[sLocalStoreStatus] = localStoreStatus\n  }\n  const connectedLocalStoreName = localStoreStatus.localConnectedName\n  if(connectedLocalStoreName){\n    return connectedLocalStoreName\n  }\n  // start upper search til getting localName\n  let currentVm = vm\n  let localStatus\n  while(currentVm){\n    localStatus = currentVm[sLocalStoreStatus]\n    if(!localStatus){\n      localStatus = {}\n      currentVm[sLocalStoreStatus] = localStatus\n    }\n    const {localName = null} = localStatus\n    if(localName){\n      // save connected name for performance to find name again\n      vm[sLocalStoreStatus].localConnectedName = localName\n      return localName\n    }\n    currentVm = currentVm.$parent\n  }\n  // if cannot find any local Store throw Error because vm won't work without local store\n}\n","import {isFunction, isString, trimEnd} from 'lodash'\nimport {TActionGetter, TMutationGetter, TStateGetter} from './type'\nimport {getChannelName, getLocalStoreName} from './util'\n\nexport const getModuleByNameSpace = (store: any, namespace, separator = '/') => {\n  const myNameSpace = trimEnd(namespace, separator) + separator\n  const module = store._modulesNamespaceMap[myNameSpace]\n  if(!module){\n    throw new Error(`[Vuexl getModuleByNameSpace] cannot fine in ${namespace}`)\n  }\n  return module\n}\n\nexport const getNameSpace = (localStoreName: string, localStoreChannelName?: string) => {\n  return localStoreChannelName ?\n    `${localStoreChannelName}/${localStoreName}` : localStoreName\n}\n\nexport const getLocalStateGetter = (getter?: TStateGetter) => {\n  // tslint:disable-next-line: only-arrow-functions\n  return function() {\n    const {$store, $isServer} = this\n    if(!$store || $isServer || !getter){return}\n    const localStoreName: string | undefined = getLocalStoreName(this)\n    if(!localStoreName){return}\n    const localStoreChannelName: string = getChannelName(this)\n    const module = getModuleByNameSpace(\n      $store,\n      getNameSpace(localStoreName, localStoreChannelName),\n    )\n    const {state, getters} = module.context\n    if(!state){return}\n    if(isFunction(getter)){\n      return getter.call(this, state, getters)\n    }\n    if(isString(getter)){\n      return state[getter]\n    }\n  }\n}\n\nexport const getLocalMutationGetter = (getter?: TMutationGetter) => {\n  // tslint:disable-next-line: only-arrow-functions\n  return function(...args: any[]) {\n    const {$store, $isServer} = this\n    if(!$store || $isServer || !getter){return}\n    const localStoreName: string | undefined = getLocalStoreName(this)\n    if(!localStoreName){return}\n    const localStoreChannelName: string = getChannelName(this)\n    const module = getModuleByNameSpace(\n      $store,\n      getNameSpace(localStoreName, localStoreChannelName),\n    )\n    const {commit} = module.context\n    if(isFunction(getter)){\n      return getter.apply(this, [commit, ...args])\n    }\n    return commit.apply($store, [getter, ...args])\n  }\n}\n\nexport const getLocalGetterGetter = (getter?: TActionGetter) => {\n  // tslint:disable-next-line: only-arrow-functions\n  return function() {\n    const {$store, $isServer} = this\n    if(!$store || $isServer || !getter){return}\n    const localStoreName: string | undefined = getLocalStoreName(this)\n    if(!localStoreName){return}\n    const localStoreChannelName: string = getChannelName(this)\n    const {getters} = $store\n    const name = `${getNameSpace(localStoreName, localStoreChannelName)}/${getter}`\n    return getters[name]\n  }\n}\n\nexport const getLocalActionGetter = (getter?: TActionGetter) => {\n  // tslint:disable-next-line: only-arrow-functions\n  return function(...args: any[]) {\n    const {$store, $isServer} = this\n    if(!$store || $isServer || !getter){return}\n    const localStoreName: string | undefined = getLocalStoreName(this)\n    if(!localStoreName){return}\n    const localStoreChannelName: string = getChannelName(this)\n    const module = getModuleByNameSpace(\n      $store,\n      getNameSpace(localStoreName, localStoreChannelName),\n    )\n    const {dispatch} = module.context\n    if(isFunction(getter)){\n      return getter.apply(this, [dispatch, ...args])\n    }\n    return dispatch.apply(this, [getter, ...args])\n  }\n}\n","import {isFunction, isString} from 'lodash'\nimport {\n  getLocalActionGetter,\n  getLocalGetterGetter,\n  getLocalMutationGetter,\n  getLocalStateGetter,\n} from './module'\nimport {ISetModuleNameOptions} from './type'\n\n// eslint-disable-next-line func-style\nexport function LocalStore(\n  _store: any,\n  options: ISetModuleNameOptions = {},\n): any {\n  // tslint:disable-next-line\n  return function(target: any, key: string) {\n    if(target.localStore){\n      throw new Error('[vuexl] omg')\n    }\n    Object.defineProperty(target, '$localStore', {\n      // tslint:disable-next-line\n      value: function() {\n        return {\n          name: key,\n          store: _store,\n          options,\n        }\n      },\n    })\n  }\n}\n\n// eslint-disable-next-line func-style\nexport function decoratorFactory(runner): any {\n  // tslint:disable-next-line\n  return function(option: any, _key?) {\n    let myOptions\n    // tslint:disable-next-line\n    const setDecorator = function(target: any, key: string | symbol) {\n      return runner.call(this, target, key, myOptions)\n    }\n    if(!isString(option) && !isFunction(option)){\n      return setDecorator(option, _key)\n    }\n    myOptions = option\n    return setDecorator\n  }\n}\n\n// tslint:disable-next-line\nexport const LocalState = decoratorFactory(function(target, key, option) {\n  const getter: any = option? option: key\n  Object.defineProperty(target, key, {\n    // tslint:disable-next-line\n    enumerable: true,\n    configurable: true,\n    get: getLocalStateGetter(getter),\n  })\n})\n\n// tslint:disable-next-line\nexport const LocalMutation = decoratorFactory(function(target, key, option) {\n  const getter: any = option? option : key\n  Object.defineProperty(target, key, {\n    // tslint:disable-next-line\n    value: getLocalMutationGetter(getter),\n  })\n})\n\n// tslint:disable-next-line\nexport const LocalAction = decoratorFactory(function(target, key, option) {\n  const getter: any = option? option : key\n  Object.defineProperty(target, key, {\n    // tslint:disable-next-line\n    value: getLocalActionGetter(getter),\n  })\n})\n\n// tslint:disable-next-line\nexport const LocalGetter = decoratorFactory(function(target, key, option) {\n  const getter: any = option? option : key\n  Object.defineProperty(target, key, {\n    // tslint:disable-next-line\n    get: getLocalGetterGetter(getter),\n  })\n})\n","import {cloneDeep, isNil} from 'lodash'\nimport {Module, Store} from 'vuex'\nimport {getNameSpace} from './module'\nimport {sLocalStoreCounter, sLocalStoreStatus} from './symbols'\nimport {ILocalStoreOptions, ISetModuleNameOptions, IStoreVue} from './type'\nimport {getChannelName, getLocalStoreName, getLocalStoreState} from './util'\nconst INIT_NUMBER = 0\nexport const getNameNumber = (\n  vm: IStoreVue<any>,\n  name: string,\n  amount: number = 1,\n): number => {\n  const localStoreCounter = vm[sLocalStoreCounter]\n  if(isNil(localStoreCounter[name])){\n    localStoreCounter[name] = INIT_NUMBER\n    return INIT_NUMBER\n  }\n  localStoreCounter[name] += amount\n  return localStoreCounter[name]\n}\n\nexport const getName = (\n  vm: IStoreVue<any>,\n  localStoreName?: string,\n  options: ISetModuleNameOptions = {},\n): string => {\n  const {$options: {name = 'unknown'} = {}} = vm\n  const {\n    isUsingName = true,\n    isUsingSameStore = false,\n    numberingSeparator = '-',\n  } = options\n  const myLocalStoreName = localStoreName &&\n  isUsingName ? localStoreName : name\n  if(isUsingSameStore){\n    // just counting\n    getNameNumber(vm, myLocalStoreName)\n    return myLocalStoreName\n  }\n  return `${myLocalStoreName}${numberingSeparator}${getNameNumber(vm, myLocalStoreName)}`\n}\n\nconst confirmChannel = (vm: IStoreVue<any>, name?: string): void => {\n  const {$store} = vm\n  if(name && !$store.state[name]){\n    $store.registerModule(name, {\n      namespaced: true,\n    })\n  }\n}\n\nconst isLocalStore = (store: Store<any>, localName: string, channelName?: string): boolean => {\n  const {state} = store\n  return Boolean(channelName ? state[channelName][localName] : state[localName])\n\n}\n\nexport const registerLocal = (\n  vm: IStoreVue<any>,\n  store: Module<any, any>,\n  localStoreName: string,\n  options: ISetModuleNameOptions = {},\n): void => {\n  // $isServer is for Nuxt.\n  const {$store = null, $isServer} = vm\n  // isServer checking is for Nuxt\n  if(!$store || $isServer){return}\n  const localChannelName: string | undefined = getChannelName(vm)\n  const localName: string = getName(vm, localStoreName, options)\n  const {isUsingName = true, isUsingSameStore = false} = options\n  // confirm root store has module for localChannelName\n  confirmChannel(vm, localChannelName)\n  // save local store status to use\n  vm[sLocalStoreStatus] = {\n    isUsingName,\n    isUsingSameStore,\n    name: localStoreName,\n    localName,\n    localConnectedName: null,\n  } as ILocalStoreOptions\n  // if already store has module skip creating module\n  if(isLocalStore($store, localName, localChannelName)){return}\n  // creating module\n  $store.registerModule(\n    localChannelName ? [localChannelName, localName] : [localName],\n    {\n      ...cloneDeep(store),\n      // force to be namespaced module\n      namespaced: true,\n    },\n  )\n}\n\nexport const unregisterLocal = (vm: IStoreVue<any>) => {\n  const {$store, $isServer} = vm\n  if($isServer){return}\n  const localStoreStatus = getLocalStoreState(vm)\n  const {localName, isUsingSameStore, name} = localStoreStatus\n  if(!$store || !localName){return}\n  const decrease = -1\n  const count: number = getNameNumber(vm, name, decrease)\n  if(!isUsingSameStore || count < 0){\n    const localStoreName: string = getLocalStoreName(vm)\n    const localStoreChannelName: string = getChannelName(vm)\n    $store.unregisterModule(getNameSpace(localStoreName, localStoreChannelName))\n  }\n}\n","import {forEach} from 'lodash'\r\nimport {\r\n  getLocalActionGetter,\r\n  getLocalGetterGetter,\r\n  getLocalMutationGetter,\r\n  getLocalStateGetter,\r\n} from './module'\r\nimport {registerLocal} from './register'\r\nimport {ISetLocalStoreOptions} from './type'\r\n\r\n// eslint-disable-next-line func-style\r\nfunction mapFactory(maps, runner) {\r\n  const result = {}\r\n  forEach(maps, (map, key) => {\r\n    result[key] = runner(map)\r\n  })\r\n  return result\r\n}\r\n// tslint:disable-next-line: only-arrow-functions\r\nexport const mapLocalActions = function(maps: any) {\r\n  return mapFactory(maps, getLocalActionGetter)\r\n}\r\n\r\n// tslint:disable-next-line: only-arrow-functions\r\nexport const mapLocalGetters = function(maps: any) {\r\n  return mapFactory(maps, getLocalGetterGetter)\r\n}\r\n\r\n// tslint:disable-next-line: only-arrow-functions\r\nexport const mapLocalMutations = function(maps: any) {\r\n  return mapFactory(maps, getLocalMutationGetter)\r\n}\r\n\r\n// tslint:disable-next-line: only-arrow-functions\r\nexport const mapLocalState = function(maps: any) {\r\n  return mapFactory(maps, getLocalStateGetter)\r\n}\r\n\r\nexport const setLocalStore = (\r\n  targetVue: any, store: any, options: ISetLocalStoreOptions = {},\r\n): any => {\r\n  return {\r\n    extends: targetVue,\r\n    beforeCreate() {\r\n      const {name} = options\r\n      registerLocal(this, store, name, options)\r\n    },\r\n  }\r\n}\r\n","import {isFunction} from 'lodash'\nimport Vue, {ComponentOptions} from 'vue'\nimport vueComponent from 'vue-class-component'\nimport {Module} from 'vuex'\nimport {LocalAction, LocalGetter, LocalMutation, LocalState, LocalStore} from './decorators'\nimport {\n  mapLocalActions, mapLocalGetters, mapLocalMutations, mapLocalState, setLocalStore,\n} from './map-helper'\nimport {\n  getLocalActionGetter,\n  getLocalGetterGetter,\n  getLocalMutationGetter,\n  getLocalStateGetter,\n  getModuleByNameSpace,\n  getNameSpace,\n} from './module'\nimport {registerLocal, unregisterLocal} from './register'\nimport {\n  sLocalStoreChannelName,\n  sLocalStoreCounter,\n  sLocalStoreStatus,\n} from './symbols'\nimport {\n  INameCounter,\n  IPluginOptions,\n  ISetLocalStoreOptions,\n  ISetModuleNameOptions,\n  ISetStateResult,\n  IStoreVue,\n  TActionGetter,\n  TGetterGetter,\n  TMutationGetter,\n  TStateGetter,\n} from './type'\nexport {\n  sLocalStoreStatus,\n  sLocalStoreChannelName,\n  sLocalStoreCounter,\n}\nexport {\n  INameCounter,\n  IPluginOptions,\n  ISetLocalStoreOptions,\n  ISetModuleNameOptions,\n  IStoreVue,\n  TActionGetter,\n  TGetterGetter,\n  TMutationGetter,\n  TStateGetter,\n}\nexport {\n  getNameSpace,\n  getLocalMutationGetter,\n  getLocalActionGetter,\n  getLocalGetterGetter,\n  getModuleByNameSpace,\n  getLocalStateGetter,\n}\nexport {\n  LocalState,\n  LocalMutation,\n  LocalAction,\n  LocalStore,\n  LocalGetter,\n}\nexport {\n  mapLocalState,\n  mapLocalMutations,\n  mapLocalGetters,\n  mapLocalActions,\n  setLocalStore,\n}\n\n// let _Vue: Vue\n// noinspection JSUnusedGlobalSymbols\nexport default {\n  install(vue, options: IPluginOptions = {}) {\n    const {name} = options\n    // if(_Vue){\n    //   throw new Error('[Vuexl install] already installed')\n    // }\n    // _Vue = vue\n    vue.prototype[sLocalStoreChannelName] = name\n    vue.prototype[sLocalStoreCounter] = {}\n    vue.mixin({\n      created() {\n        const {$options: {localStore}, $localStore} = this\n        const myLocalStore = localStore || $localStore\n        if(!isFunction(myLocalStore)){return}\n        const data: ISetStateResult = myLocalStore.call(this)\n        registerLocal(this, data.store, data.name, data.options)\n      },\n      beforeDestroy() {\n        unregisterLocal(this)\n      },\n    })\n  },\n}\ninterface IVuexlComponentOptions extends ComponentOptions<Vue>{\n  localStore: () => {\n    store: Module<any, any>,\n    name?: string,\n    options?: ISetLocalStoreOptions,\n  }\n}\n\n// eslint-disable-next-line func-style\nexport function Component(options: IVuexlComponentOptions) {\n  return vueComponent(options as ComponentOptions<Vue>)\n}\n"],"sourceRoot":""}